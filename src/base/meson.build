source_files = [
    './PairStream.cpp',
    './Identifier.cpp',
    './MetaObject.cpp',
    './EarthModel.cpp',
    './Matrix.cpp',
    './Pair.cpp',
    './Vectors.cpp',
    './factory.cpp',
    './MonitorMetrics.cpp',
    './List.cpp',
    './Locus.cpp',
    './SlotTable.cpp',
    './String.cpp',
    './Transforms.cpp',
    './FileReader.cpp',
    './Component.cpp',
    './Object.cpp',
    './Timers.cpp',
    './Stack.cpp',
    './Statistic.cpp',
    './StateMachine.cpp',
    './LatLon.cpp',
    './osg/Matrixf.cpp',
    './osg/math.cpp',
    './osg/Matrixd.cpp',
    './osg/Quat.cpp',
    './osg/MatrixDecomposition.cpp',
    './numeric/Operators.cpp',
    './numeric/Float.cpp',
    './numeric/Number.cpp',
    './numeric/Complex.cpp',
    './numeric/Integer.cpp',
    './numeric/Boolean.cpp',
    './concepts/linkage/AbstractIoDevice.cpp',
    './concepts/linkage/AbstractIoData.cpp',
    './concepts/linkage/AbstractIoHandler.cpp',
    './threads/AbstractThread.cpp',
    './threads/PeriodicThread.cpp',
    './threads/OneShotThread.cpp',
    './threads/SyncThread.cpp',
    './threads/platform/AbstractThread_linux.cpp',
    './threads/platform/PeriodicThread_linux.cpp',
    './threads/platform/SyncThread_linux.cpp',
    './ubf/AbstractState.cpp',
    './ubf/AbstractAction.cpp',
    './ubf/Agent.cpp',
    './ubf/AbstractBehavior.cpp',
    './ubf/Arbiter.cpp',
    './edl_parser/EdlScanner.cpp',
    './edl_parser/EdlParser.cpp',
    './units/Angles.cpp',
    './units/Powers.cpp',
    './units/Energies.cpp',
    './units/Frequencies.cpp',
    './units/FlowRate.cpp',
    './units/AngularVelocity.cpp',
    './units/Masses.cpp',
    './units/Times.cpp',
    './units/LinearVelocity.cpp',
    './units/Volumes.cpp',
    './units/Distances.cpp',
    './units/Forces.cpp',
    './units/Decibel.cpp',
    './units/Density.cpp',
    './units/Areas.cpp',
    './util/str_utils.cpp',
    './util/system_utils.cpp',
    './util/navDR_utils.cpp',
    './util/osg_utils.cpp',
    './util/nav_utils.cpp',
    './util/math_utils.cpp',
    './util/lfi.cpp',
    './util/platform/system_linux.cpp',
    './functors/Table4.cpp',
    './functors/Func5.cpp',
    './functors/Func1.cpp',
    './functors/Table1.cpp',
    './functors/Table.cpp',
    './functors/Func2.cpp',
    './functors/Table2.cpp',
    './functors/Func4.cpp',
    './functors/TableStorage.cpp',
    './functors/Table3.cpp',
    './functors/FStorage.cpp',
    './functors/Polynomial.cpp',
    './functors/Function.cpp',
    './functors/Table5.cpp',
    './functors/Func3.cpp',
    './colors/Hls.cpp',
    './colors/Cie.cpp',
    './colors/Rgb.cpp',
    './colors/Hsv.cpp',
    './colors/Color.cpp',
    './colors/Hsva.cpp',
    './colors/Rgba.cpp',
    './colors/Cmy.cpp',
    './colors/Yiq.cpp',
    './network/TcpServerSingle.cpp',
    './network/UdpUnicastHandler.cpp',
    './network/PosixHandler.cpp',
    './network/TcpHandler.cpp',
    './network/UdpBroadcastHandler.cpp',
    './network/TcpClient.cpp',
    './network/UdpMulticastHandler.cpp',
    './network/NetHandler.cpp',
    './network/TcpServerMultiple.cpp',
]

mixr_base = library(
    'mixr_base',
    source_files,
    include_directories : public_headers,
    dependencies : [
        thread_dep,
    ],
    install : true,
    install_dir: get_option('prefix') / 'lib',
)

mixr_base_dep = declare_dependency(
    link_with : mixr_base,
    include_directories : public_headers
)

pkg.generate(mixr_base, name : 'mixr-base')
